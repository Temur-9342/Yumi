const express = require('express');
const router = express.Router();

// üéü POST /api/invites ‚Äî –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω–≤–∞–π—Ç–∞
router.post('/', async (req, res) => {
  const { type, price, expires_at } = req.body;

  if (!type || !price || !expires_at) {
    return res.status(400).json({ error: '‚ùå –ù–µ —É–∫–∞–∑–∞–Ω—ã –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: type, price, expires_at' });
  }

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞ (8 —Å–∏–º–≤–æ–ª–æ–≤)
  const code = Math.random().toString(36).substring(2, 10).toUpperCase();

  try {
    const pool = req.pool;

    await pool.query(
      `INSERT INTO invites (code, type, price, expires_at, used, created_at)
       VALUES ($1, $2, $3, $4, $5, NOW())`,
      [code, type, price, expires_at, false]
    );

    res.status(201).json({ message: '‚úÖ –ò–Ω–≤–∞–π—Ç —Å–æ–∑–¥–∞–Ω', code });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–Ω–≤–∞–π—Ç–∞:', error);
    res.status(500).json({ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞', detail: error.message }); // <-- –º–æ–∂–µ—à—å –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –¥–ª—è –¥–µ–±–∞–≥–∞
  }
});

module.exports = router;
